{"version":3,"sources":["homepage.jsx","navbar.jsx","findTeacher.jsx","faq.jsx","teacher.jsx","App.js","serviceWorker.js","index.js"],"names":["Homepage","props","state","teacherName","handleChange","bind","handleSubmit","event","this","setState","value","target","alert","preventDefault","Container","Row","Col","md","Form","inline","onSubmit","FormControl","type","placeholder","className","onChange","Button","variant","Component","Mainnav","Navbar","collapseOnSelect","expand","bg","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","style","paddingRight","TeacherList","teachers","name","school","Alert","map","teacher","index","lg","sm","key","Card","Header","as","Body","Faq","TeacherPage","React","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4SASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,YAAa,IAC5B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,yDAONE,GACXC,KAAKC,SAAS,CAAEC,MAAOH,EAAMI,OAAOD,U,mCAEzBH,GACXK,MAAM,yBAA2BJ,KAAKN,MAAMQ,OAC5CH,EAAMM,mB,+BAIN,OAEE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACH,EAAA,EAAD,KACE,8CACA,0EAGJ,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACH,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACC,EAAA,EAAD,CAAMC,QAAM,EAACC,SAAUZ,KAAKF,cAC9B,kBAACe,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,uBACZC,UAAU,UAEFd,MAAOF,KAAKN,MAAMC,YAClBsB,SAAUjB,KAAKJ,eAEzB,kBAACsB,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,gBAA9B,oB,GAvC0BC,a,wBCAjBC,G,wDACnB,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,YAAa,IAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,yDAWNE,GACXC,KAAKC,SAAS,CAAEN,YAAaI,EAAMI,OAAOD,U,mCAE/BH,GACXK,MAAM,yBAA2BJ,KAAKN,MAAMC,aAC5CI,EAAMM,mB,+BAIN,OACE,kBAACiB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAON,QAAQ,QACrD,kBAAC,IAAD,CAAMO,GAAG,KACP,kBAACJ,EAAA,EAAOK,MAAR,wBAEF,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKhB,UAAU,WACb,kBAAC,IAAD,CAAMU,GAAG,QACP,kBAACM,EAAA,EAAIC,KAAL,CAAUC,MAAO,CAAEC,aAAc,QAAUnB,UAAU,cAArD,QAEF,kBAAC,IAAD,CAAMU,GAAG,UACP,kBAACM,EAAA,EAAIC,KAAL,CAAUjB,UAAU,cAApB,WAIJ,kBAACN,EAAA,EAAD,CAAMC,QAAM,EAACC,SAAUZ,KAAKF,cAC1B,kBAACe,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,sBACZC,UAAU,UACVd,MAAOF,KAAKN,MAAMC,YAClBsB,SAAUjB,KAAKJ,eAEjB,kBAACsB,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,gBAA9B,iB,GA7CyBC,c,uBCAhBgB,E,kDACnB,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX2C,SAAU,CACR,CAAEC,KAAM,kBAAmBC,OAAQ,qBAAsBR,GAAI,QAC7D,CAAEO,KAAM,aAAcC,OAAQ,wBAAyBR,GAAI,SAC3D,CAAEO,KAAM,gBAAiBC,OAAQ,qBAAsBR,GAAI,UAC3D,CAAEO,KAAM,kBAAmBC,OAAQ,0BAA2BR,GAAI,WAClE,CAAEO,KAAM,cAAeC,OAAQ,oBAAqBR,GAAI,YACxD,CAAEO,KAAM,aAAcC,OAAQ,wBAAyBR,GAAI,aAC3D,CAAEO,KAAM,YAAaC,OAAQ,4BAA6BR,GAAI,gBAVjD,E,qDAgBjB,OACE,yBAAKf,UAAU,eACb,kBAACwB,EAAA,EAAD,CAAOrB,QAAQ,QAAf,qCAAwD,kBAAC,IAAD,CAAMO,GAAG,eAAT,QAAxD,KAEA,kBAACpB,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,KACGP,KAAKN,MAAM2C,SAASI,KAAI,SAACC,EAASC,GAAV,OACvB,kBAACnC,EAAA,EAAD,CAAKoC,GAAI,EAAGC,GAAI,GAAIC,IAAKH,GACvB,kBAACI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,GAAG,MAAMP,EAAQJ,MAC9B,kBAACS,EAAA,EAAKG,KAAN,KAAYR,EAAQH,QACpB,kBAAC,IAAD,CAAMb,GAAG,YACP,kBAACR,EAAA,EAAD,CAAQC,QAAQ,WAAhB,oC,GA9BqBC,aCM1B+B,E,uKARX,OACE,yBAAKnC,UAAU,OACb,6C,GAPUI,aCoBHgC,E,kDAjBX,WAAY3D,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT,UAAa,IAJF,E,qDASf,OACI,yBAAKsB,UAAU,eACX,6D,GAZUqC,IAAMjC,WC4BjBkC,MAxBf,WACE,OACE,yBAAKtC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,WCZQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a15c032f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\n\nexport default class Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { teacherName: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n  handleSubmit(event) {\n    alert(\"A name was submitted: \" + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      \n      <Container>\n        <Row>\n          <Col md={8}>\n            <Container>\n              <h1>OCDSB Teachers</h1>\n              <h2>Learn about and rate your OCDSB teachers</h2>\n            </Container>\n          </Col>\n          <Col md={4}>\n            <Container>\n              <Col md={6}>\n              <Form inline onSubmit={this.handleSubmit}>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search for a teacher\"\n              className=\"mr-sm-2\"\n\n                      value={this.state.teacherName}\n                      onChange={this.handleChange}\n            />\n            <Button type=\"submit\" variant=\"outline-info\">Search</Button>\n          </Form>\n              </Col>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nexport default class Mainnav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      teacherName: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ teacherName: event.target.value });\n  }\n  handleSubmit(event) {\n    alert(\"A name was submitted: \" + this.state.teacherName);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\">\n          <Navbar.Brand>OCDSB Teachers</Navbar.Brand>\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/FAQ\">\n              <Nav.Item style={{ paddingRight: \"10px\" }} className=\"navbarLink\">FAQ</Nav.Item>\n            </Link>\n            <Link to=\"/about\">\n              <Nav.Item className=\"navbarLink\">About</Nav.Item>\n            </Link>\n          </Nav>\n\n          <Form inline onSubmit={this.handleSubmit}>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Teacher's Last Name\"\n              className=\"mr-sm-2\"\n              value={this.state.teacherName}\n              onChange={this.handleChange}\n            />\n            <Button type=\"submit\" variant=\"outline-info\">\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default class TeacherList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teachers: [\n        { name: \"jeff montgomery\", school: \"nepean high school\", id: \"1234\" },\n        { name: \"steve jobs\", school: \"woodroffe high school\", id: \"12345\" },\n        { name: \"lolbaby cutie\", school: \"nepean high school\", id: \"123456\" },\n        { name: \"seatitan cheese\", school: \"broadview public school\", id: \"1234567\" },\n        { name: \"shmedi curb\", school: \"glebe high school\", id: \"12345678\" },\n        { name: \"jedi simon\", school: \"elmdale public school\", id: \"123456789\" },\n        { name: \"old suave\", school: \"fisher park public school\", id: \"1234567890\" },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"findTeacher\">\n        <Alert variant=\"info\">Not seeing your teacher? Add them <Link to=\"/addTeacher\">here</Link>.</Alert>\n             {/* TODO: CREATE ADD TEACHER PAGE */}\n        <Container> \n     \n          <Row>\n            {this.state.teachers.map((teacher, index) => (\n              <Col lg={6} sm={12} key={index}>\n                <Card>\n                  <Card.Header as=\"h3\">{teacher.name}</Card.Header>\n                  <Card.Body>{teacher.school}</Card.Body>\n                  <Link to=\"/teacher\">\n                    <Button variant=\"primary\">Select this Teacher</Button>\n                  </Link>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nclass Faq extends Component {\n  // constructor() {\n  //     super()\n  // }\n  render() {\n    return (\n      <div className=\"Faq\">\n        <h1>FAQ PAGE</h1>\n      </div>\n    );\n  }\n}\n\nexport default Faq;\n","import React from 'react';\n\n\n\nclass TeacherPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \"teacherID\": \"\"\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"TeacherPage\">\n                <h1>This is the teacher page</h1>\n            </div>\n        );\n    }\n}\n\nexport default TeacherPage;","import React from \"react\";\nimport Homepage from \"./homepage.jsx\";\nimport Mainnav from \"./navbar.jsx\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TeacherList from \"./findTeacher.jsx\";\nimport Faq from \"./faq.jsx\";\nimport TeacherPage from \"./teacher.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Mainnav />\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/about\">\n            <TeacherList />\n          </Route>\n          <Route path=\"/FAQ\">\n            <Faq />\n          </Route>\n          <Route path=\"/teacher\">\n            <TeacherPage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}